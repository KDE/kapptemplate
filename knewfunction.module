#!/bin/sh

$ECHO "KNewFunction v0.3 (C) 1999 Kurt Granroth <granroth@kde.org>";
$ECHO;

# STEP 1: INITIALIZATION is done in the main module

###########################################################################
#
# STEP 2:  FUNCTION INFORMATION
#
# These routines gather information about the upcoming function.  You
# shouldn't have to change these at all
#
###########################################################################

# Get the function prototype
unset FUNCTION_PROTO;
while [ ! "$FUNCTION_PROTO" ];
do
	$ECHO "What is the function prototype [default: void function(int foo)]";
	$ECHO ": \c";
	read FUNCTION_PROTO;

	if [ ! "$FUNCTION_PROTO" ];
	then
		FUNCTION_PROTO="void function(int foo)";
		$ECHO "Going with default function '$FUNCTION_PROTO'";
	fi
done
$ECHO;

# split this up
RETURN_VAL=`echo $FUNCTION_PROTO | sed 's@^\([a-z]*\) .*$@\1@'`;
FUNCTION_NAME=`echo $FUNCTION_PROTO | sed 's@^[a-z]* \([^ (]*\)(.*$@\1@'`;
PARAMS=`echo $FUNCTION_PROTO | sed 's@^[a-z]* [^ (]*(\(.*\))$@\1@'`;

# Get the function type
unset FUNCTION_TYPE;
while [ ! "$FUNCTION_TYPE" ];
do
	$ECHO "What is the function type [default: protected]";
	$ECHO ": \c";
	read FUNCTION_TYPE;

	if [ ! "$FUNCTION_TYPE" ];
	then
		FUNCTION_TYPE="protected";
		$ECHO "Going with default function '$FUNCTION_TYPE'";
	fi
done
$ECHO;

unset CLASS_NAME;
while [ ! $CLASS_NAME ];
do
	$ECHO "What is the class name [default: KMyClass]";
	$ECHO ": \c";
	read CLASS_NAME;

	if [ ! "$CLASS_NAME" ];
	then
		CLASS_NAME="KMyClass";
		$ECHO "Going with default name '$CLASS_NAME'";
	fi
done
$ECHO;

# Create some variations
CLASS_NAME_LC=`$ECHO $CLASS_NAME | tr A-Z a-z`;

# Get the source file
unset CPP_FILE;
while [ ! $CPP_FILE ];
do
	$ECHO "What is its source file [default: $CLASS_NAME_LC.cpp]";
	$ECHO ": \c";
	read CPP_FILE;

	if [ ! $CPP_FILE ];
	then
		CPP_FILE="$CLASS_NAME_LC.cpp";
		$ECHO "Going with default name '$CPP_FILE'";
	fi
done
$ECHO;

# Get the source file
unset HDR_FILE;
while [ ! $HDR_FILE ];
do
	$ECHO "What is its header file [default: $CLASS_NAME_LC.h]";
	$ECHO ": \c";
	read HDR_FILE;

	if [ ! $HDR_FILE ];
	then
		HDR_FILE="$CLASS_NAME_LC.h";
		$ECHO "Going with default name '$HDR_FILE'";
	fi
done
$ECHO;

# Verify that everything is grand
$ECHO;
$ECHO "Here is what I have:";
$ECHO "Type: $FUNCTION_TYPE:";
$ECHO "The function: $RETURN_VAL $CLASS_NAME::$FUNCTION_NAME($PARAMS)";
$ECHO "Installed in: $CPP_FILE $HDR_FILE";
$ECHO;
$ECHO "Is this correct (Y/n)? ";
$ECHO ": \c";
read Y_N;
if [ $Y_N -a $Y_N = 'n' ];
then
	$ECHO "AUGH!  Well, try again.";
	exit 0;
fi
$ECHO;

$ECHO "OK, Here we go!!";

###########################################################################
#
# STEP 3:  MODIFY FILES
#
# This step will modify all files that are necessary
#
###########################################################################

for EXE_FILE in $KNEWFUNCTION_FILES;
do
	. $SHARE_DIR/knewfunction/$EXE_FILE || exit 1;
done

$ECHO "DONE!";

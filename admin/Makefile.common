
cvs: 
	@echo "*** Concatenating configure tests into acinclude.m4"
	-rm -f acinclude.m4
	@$(MAKE) -f Makefile.am top_srcdir=. acinclude.m4
	@if test -r configure.in.in; then \
	  rm -f subdirs configure.in ;\
	  echo "*** Creating list of subdirectories in subdirs" ;\
	  $(MAKE) -f Makefile.am top_srcdir=. subdirs ;\
	  echo "*** Searching for subdirectories..." ;\
	  $(MAKE) -f Makefile.am top_srcdir=. configure.in ;\
	fi
	@echo "*** Retrieving configure tests needed by configure.in"
	@aclocal
	@echo "*** Scanning for include statements"
	@autoheader
	@echo "*** Building Makefile templates (step one)"
	@automake
	@echo "*** Scanning for moc files and kde tags"
	@perl admin/am_edit
	@echo "*** Building Makefile templates (step two)"
	@autoconf
	@if grep "ac_kw foo" configure &>/dev/null; then perl -p -i -e "s/ac_kw foo/ac_kw int foo/" configure; fi 
	@echo "*** Creating date/time stamp"
	@touch stamp-h.in
	@echo "*** Finished"
	@echo "    Don't forget to run ./configure"
	@echo "    If you haven't done so in a while, run ./configure --help"

dist:
	@$(MAKE) -f Makefile.am top_srcdir=. acinclude.m4 ;\
	if test -r configure.in.in; then \
	  $(MAKE) -f Makefile.am top_srcdir=. subdirs configure.in; \
	fi ;\
	aclocal; \
	autoheader; \
	automake --foreign --include-deps; \
	perl admin/am_edit; \
	autoconf; \
	if grep "ac_kw foo" configure &>/dev/null; then perl -p -i -e "s/ac_kw foo/ac_kw int foo/" configure; fi ;\
	touch stamp-h.in; \
	if test -d po; then \
	 LIST=`find ./po -name "*.po"`; \
	 for i in $$LIST; do \
	  file2=`echo $$i | sed -e "s#\.po#\.gmo#"`; \
	  msgfmt -o $$file2 $$i || touch $$file2; \
	 done ;\
	fi

cvs-clean:
	@if test ! -d CVS; then \
	  echo "you don't have a toplevel CVS directory."; \
	  echo "You most certainly didn't use cvs to get these sources."; \
	  echo "But this function depends on cvs's informations."; \
	  exit 1 ;\
	fi;\
	pwd=`pwd` ;\
	dirs=`find . -type d | grep -v CVS | sed -e "s#^./##"` ;\
	for i in $$dirs; do \
	  if test ! -d $$pwd/$$i/CVS; then \
	    echo "D $$i" ;\
	    rm -rf $$pwd/$$i; \
	    continue; \
	  fi ;\
	  cd $$pwd/$$i ;\
	  for f in * .*; do \
	    if test ! -d $$f; then \
	      if grep -q "^/$$f/" CVS/Entries; then \
		a="b"; \
              else \
	        echo "F $$i/$$f"; \
		rm -f $$pwd/$$i/$$f; \
	      fi; \
	    fi ; \
	  done; \
	done


# I consider the following a bad hack. But I couldn't come up with a 
# solution without case. If someone has, let me know
# The Makefiles have to be sorted for slashes, since configure creates
# only one directory per Makefile not the whole hierarchy
configure.in: configure.files $(shell test -f configure.files && cat configure.files) subdirs
	@mfs=`find . -name Makefile.am -print | sed -e "s#\.am##" | sed -e "s#\./##" | sort -r`; \
	maxslashes=1; \
	for i in $$mfs; do \
	  slashes=`echo $$i | sed -e "s#[^/]##g" | wc -c | sed "s#[^0123456789]##g"`; \
	  case "$$slashes" in \
	  1) list_1="$$list_1 $$i";;\
	  2) list_2="$$list_2 $$i";;\
	  3) list_3="$$list_3 $$i";;\
	  4) list_4="$$list_4 $$i";;\
	  5) list_5="$$list_5 $$i";;\
	  6) list_6="$$list_6 $$i";;\
	  *) list_big="$$list_big $$i";;\
	 esac ;\
	done ;\
	echo "AC_OUTPUT( \\" > configure.in.makes ;\
	for i in $$list_1 $$list_2 $$list_3 $$list_4 $$list_5 \
		$$list_6 $$list_big; do \
		echo "$$i \\" >> configure.in.makes ;\
	done ;\
	egrep '^dnl AC_OUTPUT\(.*\)' `cat configure.files` | sed -e "s#^.*dnl AC_OUTPUT(\(.*\))#\1#" >> configure.in.makes ;\
	rm -f configure.in.new ;\
	cat `cat configure.files` >> configure.in.new ;\
	echo "KDE_CREATE_SUBDIRSLIST" >> configure.in.new ;\
	cat configure.in.makes >> configure.in.new ;\
	echo ")" >> configure.in.new ;\
	modulename=`pwd`; modulename=`basename $$modulename`; \
	if test -z "$$VERSION"; then VERSION="2.0pre"; fi ;\
	sed -e "s#@MODULENAME@#$$modulename#" configure.in.new | \
		sed -e "s#@VERSION@#$$VERSION#" > configure.in ;\
	rm -f configure.in.new ;\
	rm -f configure.in.makes ;\

configure.files: subdirs
	@admindir=NO ;\
	for i in . .. ../.. ../../..; do \
	  if test -x $$i/admin; then admindir=$$i/admin; break; fi; \
	done ;\
	rm -rf configure.files ;\
	if test -f configure.in.in && head -1 configure.in.in | egrep "^#MIN_CONFIG$$" > /dev/null; then \
		echo $$admindir/configure.in.min >> configure.files  ;\
	fi ;\
	list=`echo configure.in.in */configure.in.in`; \
	for i in $$list; do if test -f $$i; then \
	  echo $$i >> configure.files ;\
	fi; done

subdirs:
	@files=`ls -1 | sort`; \
	dirs= ;\
	lib_dirs= ;\
	for i in $$files; do if test -d $$i; then \
		case $$i in \
		  lib*) \
			lib_dirs="$$lib_dirs $$i" ;; \
		  *) \
			dirs="$$dirs $$i" ;; \
		esac ;\
	   fi; \
	done ;\
	rm -f SUBDIRS ;\
	for i in $$lib_dirs $$dirs; do \
	echo $$i >> ./SUBDIRS; \
	done
	@if test -r subdirs && diff subdirs SUBDIRS > /dev/null; then \
	  rm -f SUBDIRS; \
	fi
	@test -r SUBDIRS && mv SUBDIRS subdirs

package-merge.old:
	@catalogs='$(POFILES)'; \
	for cat in $$catalogs; do \
	echo $$cat $$name; \
	msgmerge -o $$cat.new $$cat $(PACKAGE).pot ; \
	if test -s $$cat.new; then \
	  grep -v "\"POT-Creation" $$cat.new > $$cat.new.2 ; \
          grep -v "\"POT-Creation" $$cat >> $$cat.new.1; \
	  if diff $$cat.new.1 $$cat.new.2; then \
		rm $$cat.new;  \
	  else  \
		mv $$cat.new $$cat ; \
	fi; \
	rm -f $$cat.new.1 $$cat.new.2 ;\
	fi ;\
	done


package-messages:
	@rm -rf po.backup ;\
	mkdir po.backup ;\
	for i in `ls -1 po/*.pot | sed -e "s#po/##"`; do \
	  egrep -v '^#([^:]|$)' po/$$i | egrep '^.*[^ ]+.*$$' | grep -v "\"POT-Creation" > po.backup/$$i ; \
	  cp po/$$i po.backup/backup_$$i ;  \
	  touch -r po/$$i po.backup/backup_$$i ;\
	  rm po/$$i ;\
	done
	@files=`find . -name Makefile.am | xargs egrep -l '^messages:' `; \
	dirs=`for i in $$files; do echo \`dirname $$i\`; done`; \
	tmpname='/tmp/messages.log' ;\
	for subdir in $$dirs; do \
	  test -z "$$VERBOSE" || echo "Making messages in $$subdir"; \
	  (cd $$subdir && $(MAKE) -f Makefile.am messages > $$tmpname 2>&1 ) || cat $$tmpname; \
	done
	@for i in `ls -1 po.backup/*.pot | sed -e "s#po.backup/##" | egrep -v '^backup_'`; do \
	  if test ! -f po/$$i; then echo "disappeared: $$i"; fi ;\
	done
	@for  i in `ls -1 po/*.pot | sed -e "s#po/##"`; do \
	   egrep -v '^#([^:]|$)' po/$$i | egrep '^.*[^ ]+.*$$' | grep -v "\"POT-Creation" > temp.pot ;\
	  if test -f po.backup/$$i && test -n "`diff temp.pot po.backup/$$i`"; then \
	 	echo "will update $$i"; \
		msgmerge -q po.backup/backup_$$i po/$$i > temp.pot ;\
	        mv temp.pot po/$$i; \
	   else \
	    if test -f po.backup/backup_$$i; then \
	      test -z "$$VERBOSE" || echo "I'm restoring $$i" ;\
	      mv po.backup/backup_$$i po/$$i; \
	      rm po.backup/$$i; \
	    else \
	      echo "will add $$i" ;\
	    fi ;\
	fi ;\
	done
	@rm -f temp.pot
	@rm -rf po.backup

find_package(KDE4 REQUIRED)

SET(UI_PREFS_BASE ${CMAKE_CURRENT_SOURCE_DIR}/prefs_base.ui)
SET(UI_%{APPNAMEUC}_VIEW_BASE ${CMAKE_CURRENT_SOURCE_DIR}/%{APPNAMELC}view_base.ui)
FIND_PROGRAM(RBUIC4 rbuic4 PATHS ${BIN_INSTALL_DIR})
if(RBUIC4)
    ADD_CUSTOM_COMMAND(OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/ui_prefs_base.rb COMMAND ${RBUIC4} -tr KDE::tr2i18n ${UI_PREFS_BASE} -o ${CMAKE_CURRENT_BINARY_DIR}/ui_prefs_base.rb COMMENT "Generating ui_prefs_base.rb")
    ADD_CUSTOM_TARGET(prefs_base ALL DEPENDS ${CMAKE_CURRENT_BINARY_DIR}/ui_prefs_base.rb)
    ADD_CUSTOM_COMMAND(OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/ui_%{APPNAMELC}view_base.rb COMMAND ${RBUIC4} -tr KDE::tr2i18n ${UI_%{APPNAMEUC}_VIEW_BASE} -o ${CMAKE_CURRENT_BINARY_DIR}/ui_%{APPNAMELC}view_base.rb COMMENT "Generating ui_%{APPNAMELC}view_base.rb")
    ADD_CUSTOM_TARGET(%{APPNAMELC}view_base ALL DEPENDS ${CMAKE_CURRENT_BINARY_DIR}/ui_%{APPNAMELC}view_base.rb)

    include_directories( ${RUBY_INCLUDE_PATH} )

    install( FILES %{APPNAMELC}.desktop  DESTINATION ${XDG_APPS_INSTALL_DIR} )
    install( FILES %{APPNAMELC}ui.rc  DESTINATION  ${DATA_INSTALL_DIR}/%{APPNAMELC} )

    install(FILES ${CMAKE_CURRENT_BINARY_DIR}/ui_prefs_base.rb DESTINATION ${DATA_INSTALL_DIR}/%{APPNAMELC})
    install(FILES ${CMAKE_CURRENT_BINARY_DIR}/ui_%{APPNAMELC}view_base.rb DESTINATION ${DATA_INSTALL_DIR}/%{APPNAMELC})
    install(FILES ${CMAKE_CURRENT_SOURCE_DIR}/%{APPNAMELC}.rb DESTINATION ${DATA_INSTALL_DIR}/%{APPNAMELC})
    install(FILES ${CMAKE_CURRENT_SOURCE_DIR}/main.rb DESTINATION ${DATA_INSTALL_DIR}/%{APPNAMELC})
    install(FILES ${CMAKE_CURRENT_SOURCE_DIR}/%{APPNAMELC}view.rb DESTINATION ${DATA_INSTALL_DIR}/%{APPNAMELC})
else(RBUIC4)
        MESSAGE(STATUS "rbuic4 not found, %{APPNAMELC} will not created")
endif(RBUIC4)
